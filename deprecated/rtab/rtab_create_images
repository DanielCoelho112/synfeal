#!/usr/bin/env python3

# stdlib
import sys
import argparse
import copy
import os

# 3rd-party
import rospy
from visualization_msgs.msg import *
from localbot_localization.src.dataset import LocalBotDataset
from localbot_localization.src.validate_dataset import ValidateDataset
import numpy as np
import shutil

def main():    
    parser = argparse.ArgumentParser(description='Validate dataset')
    parser.add_argument('-d', '--dataset', type=str, required=True, help='Name of the dataset')
    parser.add_argument('-if', '--image_folder', type=str, required=True, help='output folder')

   
    arglist = [x for x in sys.argv[1:] if not x.startswith('__')]
    args = vars(parser.parse_args(args=arglist))
    
    dataset = LocalBotDataset(path_seq=args['dataset'])
    
    root_path = f'{os.environ["HOME"]}/datasets/localbot/{args["image_folder"]}' 
    rgb_path = f'{root_path}/rgb'
    depth_path = f'{root_path}/depth'
    
    
    if os.path.exists(root_path):
        shutil.rmtree(root_path)
        
    os.makedirs(f'{os.environ["HOME"]}/datasets/localbot/{args["image_folder"]}')
    os.makedirs(rgb_path)
    os.makedirs(depth_path)
    
    for idx in range(len(dataset)):
        shutil.copyfile(f'{dataset.path_seq}/frame-{idx:05d}.rgb.png', f'{rgb_path}/{idx:04d}.png')
        shutil.copyfile(f'{dataset.path_seq}/frame-{idx:05d}.depth.png', f'{depth_path}/{idx:04d}.png')
        

        
if __name__ == "__main__":
    main()



